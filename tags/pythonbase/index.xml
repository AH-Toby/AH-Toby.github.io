<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PythonBase on Toby Blog</title>
    <link>http://localhost:1313/tags/pythonbase/</link>
    <description>Recent content in PythonBase on Toby Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en_us</language>
    <lastBuildDate>Sun, 14 Jun 2020 22:57:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/pythonbase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python面向对象编程基础(八)</title>
      <link>http://localhost:1313/PythonBase/47/</link>
      <pubDate>Sun, 14 Jun 2020 22:57:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/47/</guid>
      <description>一.__new__方法</description>
    </item>
    <item>
      <title>Python面向对象编程基础(七)</title>
      <link>http://localhost:1313/PythonBase/46/</link>
      <pubDate>Sun, 14 Jun 2020 21:23:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/46/</guid>
      <description>一.实例对象和类对象 1.实例对象(Instance Object) 概念: 通过类创建的对象 特点: 实例对象是通过类对象实例化得到的对象，也称为类的实例。 每个实</description>
    </item>
    <item>
      <title>Python面向对象编程基础(六)</title>
      <link>http://localhost:1313/PythonBase/45/</link>
      <pubDate>Fri, 12 Jun 2020 21:50:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/45/</guid>
      <description>一.什么是多态 多态是指相同的方法可以在不同的对象上表现出不同的行为，具体的行为取决于对象的类型。简而言之是不同的子类对象调用相同的父类方法，</description>
    </item>
    <item>
      <title>Python面向对象编程基础(五)</title>
      <link>http://localhost:1313/PythonBase/44/</link>
      <pubDate>Fri, 12 Jun 2020 14:55:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/44/</guid>
      <description>一.什么是继承 生活中: 继承的含义一般是子女继承父辈的财产。 程序中: 继承(Inheritance)是指,允许一个类(子类或派生类)继承另一个类</description>
    </item>
    <item>
      <title>Python面向对象编程基础(四)</title>
      <link>http://localhost:1313/PythonBase/43/</link>
      <pubDate>Fri, 12 Jun 2020 13:31:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/43/</guid>
      <description>一.面向对象的三大特性 封装(Encapsulation): 将数据和代码捆绑在一个对象中,对外部隐藏对象的内部细节,仅暴露必要的接口供外部访问</description>
    </item>
    <item>
      <title>Python面向对象编程基础(三)</title>
      <link>http://localhost:1313/PythonBase/42/</link>
      <pubDate>Thu, 11 Jun 2020 15:32:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/42/</guid>
      <description>一.魔法方法 魔法方法(Magic methods)也被称为特殊方法(Special methods)或双下划线方法(Dunder methods)</description>
    </item>
    <item>
      <title>Python面向对象编程基础(二)</title>
      <link>http://localhost:1313/PythonBase/41/</link>
      <pubDate>Thu, 11 Jun 2020 14:53:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/41/</guid>
      <description>一.类的定义 1.定义类的结构 结构: class 类名(object): # 属性定义 属性1 = value1 # 方法定义 def 方法(self, parameters): # 方法实现 pass demo: class Person(object): def __init__(self, name, age): self.name = name</description>
    </item>
    <item>
      <title>Python面向对象编程基础(一)</title>
      <link>http://localhost:1313/PythonBase/40/</link>
      <pubDate>Thu, 11 Jun 2020 14:36:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/40/</guid>
      <description>一.什么是面向对象？ 生活中我们用洗衣机洗衣服不需要考虑洗衣机的构造和制造我们只需要直接把衣服丢进去即可，这种 让其他专业的事物去做的思想 就是面</description>
    </item>
    <item>
      <title>Python文件操作(二)</title>
      <link>http://localhost:1313/PythonBase/39/</link>
      <pubDate>Wed, 10 Jun 2020 16:14:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/39/</guid>
      <description>一.os模块介绍 Python 的 os 模块提供了许多用于与操作系统进行交互的功能。以下是一些 os 模块中常用的操作： 1.获取当前工作目录 import os cwd = os.getcwd() print(&amp;</description>
    </item>
    <item>
      <title>Python文件操作(一)</title>
      <link>http://localhost:1313/PythonBase/38/</link>
      <pubDate>Wed, 10 Jun 2020 15:52:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/38/</guid>
      <description>一.文件打开和关闭 1.打开文件 在python，使用open函数，可以打开一个已经存在的文件，或者创建一个新文件 结构: open(文件路径，访问</description>
    </item>
    <item>
      <title>Python奇技淫巧(二)</title>
      <link>http://localhost:1313/PythonBase/37/</link>
      <pubDate>Wed, 10 Jun 2020 15:44:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/37/</guid>
      <description>一.集合(set) 集合(set)是一种无序、可变的数据类型，用于存储唯一的元素。集合中的元素是无序排列的，并且不能重复。集合通常用于存储无序</description>
    </item>
    <item>
      <title>Python奇技淫巧(一)</title>
      <link>http://localhost:1313/PythonBase/36/</link>
      <pubDate>Wed, 10 Jun 2020 14:30:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/36/</guid>
      <description>一.推导式 推导式（comprehension）是Python中一种简洁而强大的语法，用于快速生成列表、字典和集合等数据结构。推导式允许在一行</description>
    </item>
    <item>
      <title>Python函数(九)</title>
      <link>http://localhost:1313/PythonBase/35/</link>
      <pubDate>Wed, 10 Jun 2020 14:29:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/35/</guid>
      <description>一.递归函数 所谓的递归函数是指在函数会重复调用自身，直到满足某个条件才停止递归调用。递归函数通常用于解决可以被分解为更小、相似问题的问题，例</description>
    </item>
    <item>
      <title>Python函数(八)</title>
      <link>http://localhost:1313/PythonBase/34/</link>
      <pubDate>Tue, 09 Jun 2020 00:17:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/34/</guid>
      <description>一.引用 含义: 在Python中，引用是指一个变量所指向的对象在内存中的地址。换句话说，变量名并不直接存储对象的值，而是存储对象的内存地址，通</description>
    </item>
    <item>
      <title>Python函数(七)</title>
      <link>http://localhost:1313/PythonBase/33/</link>
      <pubDate>Mon, 08 Jun 2020 23:34:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/33/</guid>
      <description>一.拆包 意义: 所谓的拆包就是将python特殊结构的数据直接分开存储的过程 结构: 变量1, 变量2,...变量n = 特殊结构数据 demo: # 直接对函数的返</description>
    </item>
    <item>
      <title>Python函数(六)</title>
      <link>http://localhost:1313/PythonBase/32/</link>
      <pubDate>Mon, 08 Jun 2020 23:20:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/32/</guid>
      <description>一.函数之间共享数据 函数之间共享数据的主要方式是通过参数传递、返回值和全局变量 1.使用全局变量 函数之间共享变量可以使用全局变量作为媒介来存储</description>
    </item>
    <item>
      <title>Python函数(五)</title>
      <link>http://localhost:1313/PythonBase/31/</link>
      <pubDate>Mon, 08 Jun 2020 22:54:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/31/</guid>
      <description>一.作用域 作用域（Scope）指的是在程序中某个特定部分代码中，变量的可见性和可访问性，在Python中，更具变量位置的不同可以分为以下作用</description>
    </item>
    <item>
      <title>Python函数(四)</title>
      <link>http://localhost:1313/PythonBase/30/</link>
      <pubDate>Sun, 07 Jun 2020 14:54:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/30/</guid>
      <description>一.函数的嵌套调用以及实例 作用: 函数的嵌套调用是指在一个函数的函数体内调用另一个函数。这种技术允许你构建更复杂的函数和程序结构，通过将功能分</description>
    </item>
    <item>
      <title>Python函数(三)</title>
      <link>http://localhost:1313/PythonBase/29/</link>
      <pubDate>Sun, 07 Jun 2020 14:44:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/29/</guid>
      <description>一.函数的类型 函数根据有没有参数，有没有返回值，可以相互组合，一共有4种 无参数，无返回值 无参数，有返回值 有参数，无返回值 有参数，有返回值 1.</description>
    </item>
    <item>
      <title>Python函数(二)</title>
      <link>http://localhost:1313/PythonBase/28/</link>
      <pubDate>Sun, 07 Jun 2020 14:17:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/28/</guid>
      <description>一.什么是函数的参数 所谓函数的参数就是在定义函数的时候可以让函数接收数据的占位符 二.参数的种类 在Python中参数的种类有形式参数(形参),</description>
    </item>
    <item>
      <title>Python函数(一)</title>
      <link>http://localhost:1313/PythonBase/27/</link>
      <pubDate>Sun, 07 Jun 2020 14:01:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/27/</guid>
      <description>一.什么是函数？ 如果在开发程序时，需要某块代码多次使用，但是为了提高编写的效率以及代码的重用，所以把具有独立功能的代码块组织为一个小模块，这</description>
    </item>
    <item>
      <title>Python基本数据类型(六)</title>
      <link>http://localhost:1313/PythonBase/26/</link>
      <pubDate>Wed, 03 Jun 2020 16:21:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/26/</guid>
      <description>一.公共运算符 运算符 Python 表达式 结果 描述 支持的数据类型 + [1, 2] + [3, 4] [1, 2, 3, 4] 合并 字符串、列表、元组 * [&amp;lsquo;Hi!&amp;rsquo;] * 4 [&amp;lsquo;Hi!&amp;rsquo;, &amp;lsquo;Hi!&amp;rsquo;, &amp;lsquo;Hi!&amp;rsquo;, &amp;lsquo;Hi!&amp;rsquo;] 复制 字符串、列表、元组 in 3 in (1, 2,</description>
    </item>
    <item>
      <title>Python基本数据类型(五)</title>
      <link>http://localhost:1313/PythonBase/25/</link>
      <pubDate>Wed, 03 Jun 2020 15:46:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/25/</guid>
      <description>一.什么是字典 作用: 由键-值对组成的数据, 用于以键值对的方式存储数据 结构: {key:value} 说明: 1.字典和列表一样，也能够存储多个数据 2.列表中找某个元素</description>
    </item>
    <item>
      <title>Python基本数据类型(四)</title>
      <link>http://localhost:1313/PythonBase/24/</link>
      <pubDate>Wed, 03 Jun 2020 15:40:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/24/</guid>
      <description>一.什么是元组 Python的元组与列表类似，不同之处在于 元组的元素不能修改, 元组使用小括号，列表使用方括号。 结构: (value1,value2,value3,...) demo: &amp;gt;&amp;gt;&amp;gt; aTuple = (&amp;#39;et&amp;#39;,77,99.9) &amp;gt;&amp;gt;&amp;gt; aTuple (&amp;#39;et&amp;#39;,77,99.9) 二.查看</description>
    </item>
    <item>
      <title>Python基本数据类型(三)</title>
      <link>http://localhost:1313/PythonBase/23/</link>
      <pubDate>Wed, 03 Jun 2020 15:04:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/23/</guid>
      <description>一.什么是列表 作用: 列表是用来存储大量数据的容器 结构: [value1,value2,value3,...] 注意: python列表中存储的数据可以是不同的数据类型 二.列表的常见操作 1.增加元素</description>
    </item>
    <item>
      <title>Python基本数据类型(二)</title>
      <link>http://localhost:1313/PythonBase/22/</link>
      <pubDate>Tue, 02 Jun 2020 15:29:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/22/</guid>
      <description>一.find 作用: 检测 str 是否包含在 mystr中，如果是返回开始的索引值，否则返回-1 结构: mystr.find(str, start=0, end=len(mystr)) demo: mystr = &amp;#34;hello world&amp;#34; mystr.find(&amp;#34;wo&amp;#34;) 运行结果: 6 二.index 作用:</description>
    </item>
    <item>
      <title>Python基本数据类型(一)</title>
      <link>http://localhost:1313/PythonBase/21/</link>
      <pubDate>Tue, 02 Jun 2020 15:13:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/21/</guid>
      <description>一.字符串介绍 被一对双引号或者单引号包裹的数据就是字符串 结构: a = &amp;#34;字符串&amp;#34; a = &amp;#39;字符串&amp;#39; a = &amp;#34;&amp;#</description>
    </item>
    <item>
      <title>Python基本语法(十)</title>
      <link>http://localhost:1313/PythonBase/20/</link>
      <pubDate>Tue, 02 Jun 2020 00:24:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/20/</guid>
      <description>一.什么是for循环 像while循环一样，for可以完成循环的功能。 在Python中 for循环可以遍历任何序列的项目，如一个列表或者一个字符</description>
    </item>
    <item>
      <title>Python基本语法(九)</title>
      <link>http://localhost:1313/PythonBase/19/</link>
      <pubDate>Tue, 02 Jun 2020 00:17:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/19/</guid>
      <description>一.while嵌套结构 while 条件1: 条件1满足时，做的事情1 条件1满足时，做的事情2 条件1满足时，做的事情3 ...(省略)... while 条件2: 条件2</description>
    </item>
    <item>
      <title>Python基本语法(八)</title>
      <link>http://localhost:1313/PythonBase/18/</link>
      <pubDate>Mon, 01 Jun 2020 16:24:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/18/</guid>
      <description>一.break 作用: break 会立即终止循环，跳转到循环之后开始执行 结构: while 条件: if 条件: break # 跳出循环 demo01: i = 10 while i &amp;gt; 0: print(&amp;#34;妈，还要</description>
    </item>
    <item>
      <title>Python基本语法(七)</title>
      <link>http://localhost:1313/PythonBase/17/</link>
      <pubDate>Mon, 01 Jun 2020 16:10:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/17/</guid>
      <description>一.什么是循环？ 所谓的循环是一直重复着做某些事。在程序中指重复多次执行某些代码。 一般情况下，需要多次重复执行的代码，都可以用循环的方式来完成</description>
    </item>
    <item>
      <title>Python基本语法(六)</title>
      <link>http://localhost:1313/PythonBase/16/</link>
      <pubDate>Mon, 01 Jun 2020 16:06:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/16/</guid>
      <description>一.区间比较 a = 10 1&amp;lt;a&amp;lt;20 # True 11&amp;lt;a&amp;lt;20 # False 不用写and直接在数据区间进行比较 二.三元运算符 所谓三元运算是指：当条件成立时把 值1 赋值给变量，条件不成立时把</description>
    </item>
    <item>
      <title>Python基本语法(五)</title>
      <link>http://localhost:1313/PythonBase/15/</link>
      <pubDate>Mon, 01 Jun 2020 15:57:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/15/</guid>
      <description>一.关系运算符 运算符 描述 示例 == 检查两个操作数的值是否相等，如果是则条件变为真。 如a=3,b=3，则（a == b) 为 True != 检查两个操作数的值是否相等，</description>
    </item>
    <item>
      <title>Python基本语法(四)</title>
      <link>http://localhost:1313/PythonBase/14/</link>
      <pubDate>Mon, 01 Jun 2020 15:33:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/14/</guid>
      <description>一.if嵌套 通过学习if的基本用法，已经知道了 当需要满足条件去做事情的这种情况需要使用if 当满足条件时做事情A，不满足条件做事情B的这种情况</description>
    </item>
    <item>
      <title>Python基本语法(三)</title>
      <link>http://localhost:1313/PythonBase/13/</link>
      <pubDate>Mon, 01 Jun 2020 14:57:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/13/</guid>
      <description>一.elif 如果有这样一种情况：当xxx1满足时做事情1；当xxx1不满足、xxx2满足时做事情2；当xxx2不满足、xxx3满足时做事情3</description>
    </item>
    <item>
      <title>Python基本语法(二)</title>
      <link>http://localhost:1313/PythonBase/12/</link>
      <pubDate>Mon, 01 Jun 2020 14:38:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/12/</guid>
      <description>一.if-else if语法只能起到的当条件满足做一些事情，若条件不满足我们也想做一些事情我们应该怎么办呢？ 那就要使用if-else语句了 结构</description>
    </item>
    <item>
      <title>Python基本语法(一)</title>
      <link>http://localhost:1313/PythonBase/11/</link>
      <pubDate>Mon, 01 Jun 2020 14:05:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/11/</guid>
      <description>一.什么是判断？ 所谓的判断是指在生活生产中当某些条件满足时去做那些事，不满足时又去做那些事！ 二.if语法 结构: if 条件: 条件满足执行动作 demo01: # 判</description>
    </item>
    <item>
      <title>Python基础知识(十)</title>
      <link>http://localhost:1313/PythonBase/10/</link>
      <pubDate>Fri, 29 May 2020 14:47:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/10/</guid>
      <description>一.数据类型转换 函数 说明 int(x [,base ]) 将x转换为一个整数 float(x ) 将x转换为一个浮点数 complex(real [,imag ]) 创建一个复数，real为实部，imag为虚部 str(x ) 将对象 x 转换为</description>
    </item>
    <item>
      <title>Python基础知识(九)</title>
      <link>http://localhost:1313/PythonBase/9/</link>
      <pubDate>Fri, 29 May 2020 14:43:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/9/</guid>
      <description>一.什么是运算符 所谓的运算符是指进行运算的符号 二.算术运算符 运算符 描述 实例 + 加 两个对象相加 a + b 输出结果 30 - 减 得到负数或是一个数减去另一个数</description>
    </item>
    <item>
      <title>Python基础知识(八)</title>
      <link>http://localhost:1313/PythonBase/8/</link>
      <pubDate>Fri, 29 May 2020 14:13:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/8/</guid>
      <description>一.什么是输入？ 所谓的输入是指向过程中添加东西的过程，在程序中指的是向代码中输入数据的过程，在python中python2和python3的</description>
    </item>
    <item>
      <title>Python基础知识(七)</title>
      <link>http://localhost:1313/PythonBase/7/</link>
      <pubDate>Fri, 29 May 2020 13:57:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/7/</guid>
      <description>一.什么是输出？ 输出其实就是一个由一系列动作产出结果的过程，在程序中是指在我们运行程序时在特定位置输出程序运行的结果这一过程。 二.pytho</description>
    </item>
    <item>
      <title>Python基础知识(六)</title>
      <link>http://localhost:1313/PythonBase/6/</link>
      <pubDate>Fri, 29 May 2020 13:45:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/6/</guid>
      <description>一.标识符 1.什么是标识符？ 开发人员在程序中自定义的一些符号和名称，标识符是自己定义的，如变量名、函数名等 2.标识符的规则 标识符由字母、下划</description>
    </item>
    <item>
      <title>Python基础知识(五)</title>
      <link>http://localhost:1313/PythonBase/5/</link>
      <pubDate>Wed, 27 May 2020 12:32:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/5/</guid>
      <description>一.什么是变量 变量是存放数据值的容器， 程序就是用来处理数据的，而变量就是用来存储数据的 二.数据类型 为了更充分的利用内存空间以及更有效率的管理</description>
    </item>
    <item>
      <title>Python基础知识(四)</title>
      <link>http://localhost:1313/PythonBase/4/</link>
      <pubDate>Wed, 27 May 2020 12:17:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/4/</guid>
      <description>一.注释的作用 通过用自己熟悉的语言，在程序中对某些代码进行标注说明，这就是注释的作用，能够大大增强程序的可读性 二.注释的分类 1.单行注释 以#</description>
    </item>
    <item>
      <title>Python基础知识(三)</title>
      <link>http://localhost:1313/PythonBase/3/</link>
      <pubDate>Wed, 27 May 2020 11:16:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/3/</guid>
      <description>一.pycharm介绍 PyCharm是一种PythonIDE，带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、</description>
    </item>
    <item>
      <title>Python基础知识(二)</title>
      <link>http://localhost:1313/PythonBase/2/</link>
      <pubDate>Wed, 27 May 2020 10:53:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/2/</guid>
      <description>一.Python发展背景 Python的作者，Guido von Rossum (吉多·范·罗苏姆，中国Python程序员都叫他 龟叔)，荷兰人。1982年，龟叔从</description>
    </item>
    <item>
      <title>Python基础知识(一)</title>
      <link>http://localhost:1313/PythonBase/1/</link>
      <pubDate>Wed, 27 May 2020 10:33:00 +0000</pubDate>
      <guid>http://localhost:1313/PythonBase/1/</guid>
      <description>一.计算机基础知识 1.什么是计算机？ 计算机（computer）俗称电脑，是现代一种用于高速计算的电子计算机器，可以进行数值计算，又可以进行逻</description>
    </item>
  </channel>
</rss>
